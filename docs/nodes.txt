=====================================
Documentation des Nœuds BehaviorTree
=====================================

1. NŒUDS DE CONTRÔLE
-------------------

1.1 Sequence
-----------
Description:
    Exécute les nœuds enfants séquentiellement jusqu'à ce qu'un échoue.
    
Retours:
    - SUCCESS : Tous les nœuds enfants ont réussi
    - FAILURE : Un nœud enfant a échoué
    - RUNNING : Un nœud enfant est en cours d'exécution

Exemple:
```yaml
    sequence:
        - condition_a
        - action_b
        - action_c
```

1.2 Fallback (Selector)
----------------------
Description:
    Exécute les nœuds enfants jusqu'à ce qu'un réussisse.
    
Retours:
    - SUCCESS : Un nœud enfant a réussi
    - FAILURE : Tous les nœuds enfants ont échoué
    - RUNNING : Un nœud enfant est en cours d'exécution

Exemple:
```yaml
    fallback:
        - condition_a
        - action_b
```

1.3 Parallel
-----------
Description:
    Exécute tous les nœuds enfants simultanément.
    
Paramètres:
    - success_threshold [in] : Nombre de succès requis (défaut: tous les enfants)
    - failure_threshold [in] : Nombre d'échecs tolérés (défaut: 1)

Retours:
    - SUCCESS : Nombre de succès atteint
    - FAILURE : Nombre d'échecs dépassé
    - RUNNING : En cours d'exécution

Exemple:
```yaml
    parallel:
        success_threshold: 2
        failure_threshold: 1
        children:
            - action_a
            - action_b
            - action_c
```

2. NŒUDS DÉCORATORS
------------------

2.1 Inverter
-----------
Description:
    Inverse le résultat du nœud enfant.

Retours:
    - SUCCESS : Si l'enfant retourne FAILURE
    - FAILURE : Si l'enfant retourne SUCCESS
    - RUNNING : Si l'enfant retourne RUNNING

Exemple:
```yaml
    inverter:
        child: condition_a
```

2.2 ForceSuccess
--------------
Description:
    Force le retour SUCCESS quel que soit le résultat de l'enfant.

Exemple:
```yaml
    force_success:
        child: action_a
```

2.3 Repeat
---------
Description:
    Répète l'exécution du nœud enfant.

Paramètres:
    - num_cycles [in] : Nombre de répétitions (défaut: -1 pour infini)

Exemple:
```yaml
    repeat:
        num_cycles: 3
        child: action_a
```

=====================================
Notes d'utilisation:
-------------------
1. Tous les nœuds sont compatibles avec l'éditeur Groot2
2. Les paramètres [in] sont requis sauf indication contraire
3. Les retours RUNNING sont spécifiques aux nœuds non-conditionnels